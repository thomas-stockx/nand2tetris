// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

// Implementation by Thomas Stockx

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // if inc == 1
    Inc16(in=outFeed,out=incMux); 
    Mux16(a=outFeed,b=incMux,sel=inc,out=loadMux); 
    
    // if load == 1
    Mux16(a=loadMux,b=in,sel=load,out=resetMux); 
    
    // if reset == 1
    Mux16(a=resetMux,b=false,sel=reset,out=loadRegister);
    
    // Always load since the input for loadRegister is always the correct value
    Register(in=loadRegister,load=true,out=outFeed,out=out); 
}
